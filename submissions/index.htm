
<!doctype html>
<html lang="en">
<!-- Hi Folks, this is the template file for pages in the citySchema.org documentation library -->
<head> <!-- Edit the following for each page -->
    <title>Model Submission Guidelines</title>
    <meta name="description" content="Guidelines for models submitted for inclusion inthe citySchema repository">
    <meta name="keywords" content="City Modeling, Digital Humanities, Geography">
    <meta name="author" content="Paul B. Cote">
    
<!-- don't edit between here and the Article div.  -->
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta charset="UTF-8">
    <link rel="icon" href="../resources/images/favicon.png" type="image/x-icon">
    <script src="../resources/jquery/jquery-3.6.0.min.js"></script>
    <link href="../resources/cityschema.css" rel="stylesheet"> 


    <!-- The index sidebar and all content other than the main article coe form the cityschema_includes.js.
          When you add a new page or internalachcor, you should update the index in cityschema_includes.js.-->
    <script src="../resources/cityschema_includes.js"></script>
    <!-- THis has to come after the cityschema_includes file-->
    <script src="../resources/cityschema.js"></script>
    </head>
    <body>
      <div id="grid-container">
        <div id="index-container">
          <div id="index-header"> <!-- Content provided by cityschema_includes.js--> </div>
          <div id="index">        <!-- Content provided by cityschema_includes.js--> </div>
          <div id="index-footer"> <!-- Content provided by cityschema_includes.js--> </div>
        </div> 
        <div id="main-container">
          <div id="header"> <!-- Content provided by cityschema_includes.js--> </div>

<!-- Page content goes inside the article div -->
<div id="article">
  <h3 class="section_title"></h3>  <!-- Optional: would be the tile of the intro chapter.  -->
  <h1 class="title">Model Submission Guidelines</h1>

<p>The page that describes the <a href="../model_collection/index.htm">Architecture of the agency's Model Collection </a> is important background for understanding how we manage a collection of spatially referenced 3D models using a geographic information system.  The vast majority of our models of buildings, walls and docks that existed prior to 2011 have been generated by automated or semi-automated procedures.  Most of the models of large projects built since about 2004 are hand-made models which were created during the design review process.  
</p>
<p>
One of the trickiest parts of this project is trying to make a smooth and predictable exchange of 3D information from the tools used by designers into geographic information systems (GIS) and archival asset management systems.  There are a few predictable problems which we have tried to sort out in this latest release of our city-wide model sharing scheme. 
</p>  
<ul>
    <li><b>Spatial Coordination / Registration of Models:</b>  Geographic information in the state of Massachusetts is exchanged through a state-wide coordinate system (Massachusetts State Plane).  Design tools loose their precision and become very klutzy when working far form the origin of the coordinate system.  Our tile scheme anc coordinate system have been designed with a coordinate system and adjustable insertion points that should allow us all to share updates without a lot of guess work.   
    <li><b>Control of Level of Detail:</b> The scheme we have devised for managing models treats building models as singular objects that have no internal divisions.   
    <li><b>Data Formats:</b> Design tools have amazing capabilities for generating and organizing geometry.  The unique capabilities of favorite tool-kits makes it difficult to move models from one tool to another.  Developing a smooth, predictable exchange involves choosing a common denominator that can be moved all the way around the tool-chain. 
    </ul>


<h2>Very Simple Model Content Standard </h2>
<p>Building and Bridge models in the BPDA's city model collection are managed in a geographical database that treats models as singular objects associated with attributes. In this context, models do not have any subdivisions such as Layers or nested groups.  This makes the model collection simple to manage without much need for a detailed specification or normalization of model organization.  Building models are mesh objects representing the exterior shell of the building.  

<h2 id="lod">Model Level of Detail</h2> 
<p>Here are some additional guidelines for model geometry level of detail:
</p>
<ul>
<li>If a project has multiple buildings or construction / permitting phases it is best if these are separated into individual .OBJ files.
<li>If a building is separated into separate functional spaces that can be visualy distinguished from the outside, like parking structures, these can be submitted as individual OBJ files but this is not a requirement.  
<li>Our preferred level of detail is LOD 3.0 (See our <a href="../model_collection/index.htm#LOD">Level of Detail dictionary</a>) Which may potentially represent overhangiing elements like porticos and entryways.  If parts of the building protrude beyond the vertical facade by more than a foot and are more than a foot tall, they may be included.
<li>Window openings should not be cut out or indented.
<li>Please do not divide your model into stories.   
<li>Representing below-ground portions of the building is OK.
<li>If your building is attached to other buildings, it would be helpful to have separate models for the attached buildings. 
<li>If your project has involved making improvements to themodels of other buildings in the neighborhood, it would be great to have those, too!
</ul>
<h2 id="obj">Simple Wavefront Object Format</h2>
<p>We have found that various 3D model formats allow geometry types that do not translate well when we import them into our GIS-Based management scheme. This is why we prefer that models be submitted as the simplest possible triangulated mesh in Wavefront Object format. 
<p>
Our model asset management system treats OBJ format as a primary asset which are leveraged to various proxy formats, including GLTF, ESRI Multipatch and SketchUp.  Each of these translations has potential for difficulty and corruption to creep in.  Therefore we prefer that designers use their modeling tool to produce a simplified view of their building shells that can be exported as a simple triangulated mesh. </p>
<ul>
<li>Triangulate all faces (no parametric curves please)
<li>Orient axes: Z Up, Y Forward.
<li>Please do not use single faces that would have both sides exposed.  Many tools wil represent these as invisible from one side or the other. Even if your software has an option for exportng "Two-Sided Faces"
<li>If your model uses materials and or textures, we would be happy to have these, although at this time, our workflow has to remove these.  We will keep your textured model in the archive.  
</ul>
<p>Production of a simple shell view is routine if the modeler anticipates the need and has access to the model in its original format. </p>


<figure class="middle"> 
  <img class="scaled" src="./images/submission_both.jpg"> 
  <figcaption>Triangulated shell model and groundplan reference image</figcaption>
</figure>


<h2 id="georef">Context and Geo-Location</h2>
<p>We need some means of verifying the placement of your model in the context of our existing city model.  This is tricky, since most modeling tools have trouble with geometry in very expansive coordinate systems that are used in state and local agencies.  The agency has developed a tiling and coordinate referencing scheme that bridges between design tools and GIS.  In short, keeping our tile frame in your model permits you to have your origin wherever works best in your project, but to re-register your model exports back and forth with the collaborative city model coordinate system. </p>
    You can read all about it on our <a href="./tile_scheme.htm#coordinates" target = "_new">Tile Grid and Coordinate System</a> page.  
    <ul>
        <li> if it is possible for you to submit your model using our Metro Boston 3D coordinate referencing system, that would be preferred.  If you have difficulties doing this, we would like to hear more about that. 
        <li>We know that you wil be working in a project-based coordinate system.  If shifting back to the Metro 3D Boston coordinate system is too much to ask, it could be very helpful to include the tile boundary in your model -- which would give us a dependable registration.   
        <li>If possible, include a ground-plan with a draped image texture as shown in the illustration above. The groundplan should show enough of the edge of pavement in the context area to verify that the model is registered correctly.  
    </ul>

<h2 id="sources">Source Material</h2>
<p>Our archival system is capable of storing source material, including the plans and elevations and other information that may be part of the project proposal.  We can also keep working models -- for example SketchUp or .3DS files.  We are Sketchuip Users, so if you have a SketchUp file of your model this may be helpful in case we need to do any trouble-shooting.
</p>

<h2>On-Going Work In Progress</h2>
<p>This submission procedure is a work in progress, so we anticipate problems and hope to work with the development community to make it as easy as possible to participate in building our collaborative open=-source city model!</p>

</div> <!-- Closes #article div -->

    <div id="footer"> <!-- Content provided by cityschema_includes.js--> </div> 
  </div> <!-- Closes main container--> 
</div> <!-- closes grid container-->
</body>
</html>
    