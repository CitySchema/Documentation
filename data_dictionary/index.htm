
<!doctype html>
<html lang="en">
<!-- Hi Folks, this is the template file for pages in the citySchema.org documentation library -->
<head> <!-- Edit the following for each page -->
    <title>Data Dictionary</title>
    <meta name="description" content="Home page for the citySchema project.  A gateway for tools, techniques and documentation about cross-disciplinary collaboration on city models. ">
    <meta name="keywords" content="City Modeling, Digital Humanities, Geography">
    <meta name="author" content="Paul B. Cote">
    
<!-- don't edit between here and the Article div.  -->
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta charset="UTF-8">
    <link rel="icon" href="../resources/images/favicon.png" type="image/x-icon">
    <script src="../resources/jquery/jquery-3.6.0.min.js"></script>
    <link href="../resources/docutree.css" rel="stylesheet"> 
    <script src="../resources/slideshow_pbc.js"></script>
    <link href="../resources/slideshow_pbc.css" rel="stylesheet"> 
    

    <!-- The index sidebar and all content other than the main article coe form the cityschema_includes.js.
          When you add a new page or internalachcor, you should update the index in cityschema_includes.js.-->
    <script src="../resources/cityschema_includes.js"></script>
    <!-- THis has to come after the cityschema_includes file-->
    <script src="../resources/docutree.js"></script>
    </head>
    <body>
      <div id="grid-container">
        <div id="index-container">
          <div id="index-header"> <!-- Content provided by cityschema_includes.js--> </div>
          <div id="index">        <!-- Content provided by cityschema_includes.js--> </div>
          <div id="index-footer"> <!-- Content provided by cityschema_includes.js--> </div>
        </div> 
<div id="main-container">
  <div id="header"> <!-- Content provided by cityschema_includes.js--> </div>

<!-- Page content goes inside the article div -->
  <div id="article">
    <h1 class="title">Data Dictionary for Models of Built Structures </h1>
    <p>The Bos3d City Model includes a <b>Model Collection</b> of more than 100,000 models representing built structures.  These models originate from many different sources. The Model Management Schema provides a system of attributes that can be used to understand the provenance of models and to keep track of models through their life-cycle.  
    <p>The <b>Model Catalog</b> is a single table with a reference for each model in the structure model collection.  
    </p>
    <h3>Table of Contents</h3>

    <ul class="verses">
        <li> <a href="../data_dictionary/index.htm#concept">Concept of Built-Structure Model</a> 
        <li> <a href="../data_dictionary/index.htm#dictionary">Data Dictionary for Model Catalog</a> 
        <li> <a href="../data_dictionary/index.htm#status_classes">Status Classes and Model Stores</a>
        <li> <a href="../data_dictionary/index.htm#status_domain">Model Status Dictionary</a>
            <li> <a href="../data_dictionary/index.htm#qa_flags">QA_Flags Dictionary</a>
        <li><a href="../data_dictionary/index.htm#LOD">Levels of Detail and other Recommendations for Model Structure</a>
      </ul>

  <h3 id="concept">Concept of Built Structure Models</h3>
  <p>It is essential to keep in mind that in the context of the model collection and its catalog that each record is related to a model of a built structure.  These models which might represent a single building, a part of a building, a group of buildings, or a wall, a dock, or a bridge.  Referring to these as Building models leads to confusion.  This conceptual definition is necessary, because of the the semi-automated means of creating models is unable to distinquish between discrete "buildings" especially when these are attached to eachother.  This fact creates a difficulty when it comes to linking structure models with information concerned with individual buildings.  Such a one-to-one link may be possible to make for some models.  It is always possible to split or merge structure models to achieve a representation of an individual building, but this can be a labor-intensive process. 
<p>


    <h3 id="dictionary">Model Catalog Attributes Dictionary</h3>
        <p>Note: field names have 10 or few characters to retain compatibility with ESRI Shapefile format. </p>
    
    <table class="dictionary">
        <tr>
            <td colspan="2"><b>Real-World Structure Attributes:</b> These are attributes that refer to the real-world structure represented by the model.  </td>
        </tr>
        <tr>
        <td width="20%"><b>Name</b><br>Text</td>
        <td>The name of the structure.  If the model reflects one phase of a development project, you can mention it here.</td>
        </tr>
        <tr>
        <td><b>Struct_ID</b><br>Text</td>
        <td>If there is a table about structures, this would be a reference to the primary key of that table.</td>
        </tr>
        <tr>
        <td><b>Struct_Type</b><br>Text</td>
        <td>Type of structure. See domain values.  Refers mostly to the physical aspect of the structure.  
        <br>Must have one of the following values: Building, Bridge, Wall</td>
        </tr>
        <tr>
        <td><b>Struct_Use</b><br>Text</td>
        <td>Use of the structure.  More specific than Type.  Refers to the functional aspect of the structure. <br>
            Examples: School, Library, Civic, Residential, Commercial, Subway Headhouse, Bus Shelter</td>
        </tr>
        <tr>
        <td><b>Struct_Lnk</b><br>Text</td>
        <td>A URL that provides more information about the structure.  
            <br>For example, a Wikipedia page or a library branch page.</td>
        </tr>
        <tr>
        <td><b>Project_ID</b><br>Text</td>
        <td>The Project ID in the BPDA’s Article 80 Development log.</td>
        </tr>
        <tr>
        <td><b>ProjectLnk</b><br>Text</td>
        <td>A URL linking model to the BostonPlans landing page for the project if applicable. </td>
        </tr>
    </table>
    <br>
    
    <table class="dictionary">
        <tr>
            <td colspan="2"><b>Model Status Attributes: </b>: These attributes are used to determine whether or how the model should appear in various scenarios involving the time period, or planning context.  These are the attributes most often used for controlling the styling of models and the attributes most frequently updated in the model management workflows.   </td>
        </tr>
        <tr>
        <td width="20%"><b>Status</b><br>Text</td>
        <td>A phase in the lifecycle for proposed, built, demolished or renovated structures.  Values of Status are taken from the <b>Status_Code</b> domain (see below)</td>
        </tr>
        <tr>
        <td><b>Appear_Dt</b><br>Date</td>
        <td>Date of the latest observation or document that confirms the current value of Status.  The Appear date should refer to the same document referred to in the Appear Source fields.
        </td>
        </tr>
        <tr>
        <td><b>AppearSrc</b><br>Text</td>
        <td>The observation or document and the date that confirms the Appear_Dt.  
            <br>Example: “Google Earth“  <i>Note that the date for the document named here is inferred by the value of <b>AppearDt</b></i>
            </td>
        </tr>
        <tr>
        <td><b>Disapp_Dt</b><br>Date</td>
        <td>When the model would be turned off if a time-slider were used.  Usually the date of the earliest observation that confirms that a structure has been demolished or substantially renovated. <i>When a model relates to a group of structures, one of which has been demolished, the entire model may have its status set to <b>History</b> and the Disappear Date set to the Appear Date for the new model.  In this case, the original model may be split to create a pocket for the new model.  The remaining portions of the split model would have the same appear Date as the new model.</td>
        </tr>
        <tr>
        <td><b>DisappSrc</b><br>Text</td>
        <td>A short reference to the document that established the Dissap_Dt.  The Disappear Date should refer to the same document referred to in the Disappear Source fields.  
            <br>Example: “Nearmap“, 
        <p>For models with status of Proposed or Permitted Demolish, this field can be used to record observations that the structure is still there.  
        <br> Example: "Building still intact per Nearmap, 03/27/2021" 
            </td>
        </tr>
    </table>
    <br>
    <table class="dictionary">
        <tr>
            <td colspan="2"><b>Model Provenance Attributes:</b>Provide the information for understanding the provenance of models as documents that have authors, contributors sources and issue dates. </td>
        </tr>
        <tr>
        <td width="20%"><b>Model_ID</b><br>Text</td>
        <td>A unique ID for each model.  The ID is a random arrangement of seven upper-case letters and numerals prefixed with BOS_ . </td>
        </tr>
        <tr>
        <td><b>Model_Cred</b><br>Text</td>
        <td>This short reference to the person or enterprise responsible for creating the model.</td>
        </tr>
        <tr>
        <td><b>ModelBatch</b><br>Text</td>
        <td>A folder within the Archive/ModelWork folder where the original source file can be found. </td>
        </tr>
        <tr>
        <td><b>Model_File</b><br>Text</td>
        <td>Name of the original source file for the model.</td>
        </tr>
        <tr>
            <td><b>ModelStore</b><br>Text</td>
            <td>Name of the model store holding the open-format model in the Archive Repository.  
                <ul>
                    <li><b>Change:</b> Between major updates, new and modified public models belong in the Change store. 
                    <li><b>As-Built:</b> Measured models of existing and historical structures belong in the As-Built store.
                    <li><b>Internal:</b> Models created for in-house investigations belong in the Internal model store
                    </ul>   
                </ul></td>
            </tr>
        <tr>
        <td><b>Model_Dt</b><br>Date</td>
        <td>Date when the model was created. This value should reflect the date that the model was enrolled in the collection.  In the case of modified models, it should reflect the date that the modified model was enrolled. This field will be used to discover updated models.</td>
        </tr>
        <tr>
        <td><b>ModelNote</b><br>Text</td>
        <td>This is the text that would appear as the description of the model.  
        This note might describe the context of the model's creation.  
        <br>Examples: <ul>
        <li>"Western Avenue Alternatives: Scheme B"
        <li>"City Hall Garage: Phase 3."
        <li>"Prepared for the Central Artery and Tunnel Project."
        <li>"Prepared for a Harvard Design School studio to re-envision City Hall Plaza, conducted by Professor Alex Krieger."
    
        </ul>
        This note might also reflect technical aspects of the model, for example, if the model has been modified.
        </td>
        </tr>
        <tr>
        <td><b>Model_LOD</b><br>Double</td>
        <td>Level of detail.  See table at <a href="#LOD">Levels of Detail</a></td>
        </tr>
        <tr>
        <td><b>Survey_Src</b><br>Text</td>
        <td>The observations that were used for establishing the shape of the model.  Should describe the responsible party and the methodology where possible. 
            <br>Examples:  
            <ul><li>“Photogrammetry by Infotech Spring 2011”
                <li>“Model hand-made from design documents by Sasaki and Associates January 2018"
            </ul>
            </td>
        </tr>
        <tr>
        <td><b>Survey_Dt</b><br>Date</td>
        <td>The date that the model geometry was captured or published.</td>
        </tr>
    </table>
    <br>
    
    <table class="dictionary">
        <tr>
            <td colspan="2"><b>Model Geometric &amp; Reference Attributes:</b>These attributes are automatically generated by the model enrollment process.  
            <p>The centroid positions are critical for applications that must translate the coordinates of models form the shifted Mass state Plane coordinates to geographic coordinates with rotation.
            <p>The elevation information may be used to convert model footprints to LOD1 models that may be used as place-holders in applications where efficiency is more critical than true 3D. 
            </td>
        </tr>
        <tr>
        <td width="20%"><b>Centr_Lat</b><br>Double</td>
        <td>Latitude of the model centroid (2D) in decimal degrees. Assuming WGS84 earth model. </td>
        </tr>
        <tr>
        <td><b>Centr_Lon</b><br>Double</td>
        <td>Longitude of the model  Centroid (2D) in decimal degrees. Centroid coordinates calculated by ArcGIS using the “Inside” option.</td>
        </tr>
        <tr>
            <td width="20%"><b>Centr_X_Ft</b><br>Double</td>
            <td>X coordinate (Feet) of the model centroid in the Metro Boston 3D coordinate system. </td>
            </tr>
            <tr>
            <td><b>Centr_Y_Ft</b><br>Double</td>
            <td>Y coordinate (Feet).  See above.  </td>
            </tr>
        <tr>
        <td><b>Min_El_Ft</b><br>Double</td>
        <td>The lowest elevation of the  model.  This may be below ground. </td>
        </tr>
        <tr>
        <td><b>Max_El_Ft</b><br>Double</td>
        <td>Elevation of the highest point of the model.</td>
        </tr>
        <tr>
        <td>Gnd_El_Ft<b></b><br>Double</td>
        <td>The elevation where the model intersects the ground.  (this measure uses vertices of the 2D footprint to sample elevations. The elevation value is the lowest value from the Infotech DTM that coincides with a vertex from the model's 2d footprint.</td>
        </tr>
        <td><b>Height_Ft</b><br>Double</td>
        <td>The relative height from the Max Elevation of the model to the lowest corner.</td>
        </tr>
        <tr>
        <td><b>Tile_ID</b><br>Text</td>
        <td>ID for the tile that the model centroid falls within. </td>
        </tr>
        <tr>
        <td><b>Parcel_ID</b><br>Text</td>
        <td>The Parcel ID for the parcel that falls under the centroid of the model’s footprint. </td>
        </tr>
        <tr>
        <td><b>Parcel_Lnk</b><br>Text</td>
        <td>A url that opens the Assessor’s web map centered on the parcel that identified by the Parcel_ID.</td>
        </tr>
        <td><b>GoogleLnk</b><br>Text</td>
        <td>A url that brings up an oblique view of the building in Google Streetmap</td>
        </tr>
        <tr>
        <td><b>NearMapLnk</b><br>Text</td>
        <td>A hyperlink that brings up an oblique view of the building in NearMap.  Requires a NearMap login.</td>
        </tr>
    
    </table>
    <br>
    
    <table class="dictionary">
        <tr>
            <td colspan="2"><b>Edit Tracking Fields:</b> Publishing a new edition of the model collection using ArcGIS involves generating new multipatch feature classes.  When these are initialized, the automatically assigned Record Initialized and Record Modified fields are wiped out.  These fields are critical for model management.  It is also necessary to preserve the Edit_Date and Edit_Action fields for applications that need to know the last deliberate action that was taken. 
            </td>
        </tr>
        <tr>
        <td width="20%"><b>RecInitDt</b><br>Date</td>
        <td>The time stamp for the creation of the table row.  This defaults to the time that the feature class was issued. Automatically generated.</td>
        </tr>
        <tr>
        <td><b>RecInitUsr</b><br>Text</td>
        <td>The username for the person who initialized the row. Automatically generated.</td>
        </tr>
        <td width="20%"><b>RecModDt</b><br>Date</td>
        <td>The time stamp for the last modification of the table row. Automatically generated.</td>
        </tr>
        <tr>
        <td><b>RecModUsr</b><br>Text</td>
        <td>The username for the person who last modified the row. Automatically generated.</td>
        </tr>
        <tr>
        <tr>
        <td><b>Editor</b><br>Text</td>
        <td>The user name for the person who did the last meaningful change to this record. NOT Automatically generated.</td>
        </tr>
        <tr>
        <td><b>Edit_Dt</b><br>Date</td>
        <td>The timestamp of the last deliberate edit. NOT Automatically updated</td>
        </tr>
        <tr>
        <td><b>Edit_Action</b><br>Text</td>
        <td>Explanation of the last deliberate edit  Not automatically updated</td>
        </tr>
        <tr>
        <td><b>QA_Flag</b><br>Text</td>
        <td>Short code used to redirect models to procedures in the model management process.  Pre-coded domain consisting of: <b>3D Edit, Promote Status, Demote Status, Stop, Alt  </td>
        </tr>
        <tr>
        <td><b>QA_Issue</b><br>Text</td>
        <td>Use this field to explain any issues with the model or catalog information that may need addressing in the model management process. </td>
        </tr>
    
    </table>

    <br>
    <hr>
    <br>

    <h2 id="status_classes" id="status_classes">Model Status Classes and Model Stores</h2>
    <p>The geodatbase view of the Model Collection is segmented into Model Status Classes, which helps to keep clutter out of the way during model management operations.  Individual multipatch features are sorted into these classes according to the value of their <b>Status</b> attribute.  An important mechanism of the Model Management workflow is that changing the Status of models in the <b>Stage</b> feature classes will cause these models to be sorted into a new status class when a new geodatabase edition is pushed.
    </p>
    <p><b>Model Store</b> is a more general categorization of models which forms the three classes of obj-format models that are stored in the open-format model store.  These are used as the validated back-up of the collection and the repository for the model download site. 
    </p>
        <table class="dictionary">
            <tr>
            <td width="20%"><b>Status Class</b></td>
            <td width="60%"><b>Description</b></td>
            </tr>
            <tr>
                <td><b>Existing_MP</b></td>
                <td>Holds measured models of structures.  Status <b>Existing</b> or <b>Approved Demo</b>. These models will be shared <b>As-Built</b> model Store.</td>
            </tr>
            <tr>
                <td><b>History_MP</b></td>
                <td>Holds models reflecting the shapes of structures that once existed. Status: <b>History</b>. These models are selected because they were replaced by newer models in the Existing_MP feature class or by models in Approved_MP that have been promoted to Under Construction or Complete..  It is not necessary to split historical models to reflect the pocket occupied by new models.  Therefore, some historical models cover one building that changed and also include several neighboring buildings that did not change.  Most of these models will be measured models, although some projects focused on historical representation may build hand-made models of historical buildings. These models will be shared <b>As-Built</b> model Store. </td>
            </tr>
            <tr>
                <td><b>Approved_MP</b></td>
                <td>Holds hand-made models reflecting projects. These These models are shared with the public having  Status <b>Approved</b>, <b>Under Construction</b>, or <B>Current</b>.  When <b>Current</b> models are be replaced by measured models, their status is changed to <b>Project Complete</b> which causes them to be sorted into the <b>Internal_MP</b> status class. These models will be shared <b>Change</b> model Store.  </td>
            </tr>
            <tr>
                <td><b>Internal_MP</b></td>
                <td>Hand-made models that are created for internal investigations. This feature class holds all hand-made models created for the project review and approval process and for internal studies.  Status <b>Internal Study</b>,<b>Pre-File</b>, <b>Under Review</b>, <b>Proposal Superseded</b>,<b>Proposal Built</b>.  While hand-made models have status of <b>Approved</b> or <b>Under Construction</b>, they are part of the Approved Feature Class.  When they are replaced by measured models, they return to Internal_MP with status <b>Proposal Built</b> are shared on public web scenes or in the model download site. they are stored in the <b>Internal</b> model store.</td>
            </tr>
            <tr>
                <td><b>Alt_MP</b></td>
                <td>The Alt_MP feature class holds models that represent alternative representations of structures.  For example, these could be models that are higher level of detail than models featured in the Existing feature class -- such as models featuring textures.  These models will be shared in the As-Built model store.  Status: <b>Alt</b>.  These models will be shared <b>As-Built</b> model Store.</td>
            </tr>
            <tr>
                <td id="retired_mp"><b>Retired_MP</b></td>
                <td>This status is used only during Major updates, when massive quantities of models may be replaced by improved models of the same structure that reflects no change in the geometric form.  <b><i>This status is not to be used during routine updates! </b></i> Retired models are preserved for the purposes of possible recovery and as they reflect a valuable record of observations or creative work.</td>  
            </tr>
        </table>
        <br>
        <hr>
        <br>
    
    <h2 id="status_domain">Model Status Domain</h2>
    <p>The Model Status attribute is a category scheme that reflects the life-cycle state of the the building or proposal that the model represents.  This field controls when the model is rendered in applications.  
    </p>
    <p>The GIS-Based model management applications use Model Status to segment the collection into feature classes that streamline applications that may be focused on the current, proposed or historic views.
    </p>
    <table class="dictionary">
        <tr>
        <td width="20%"><b>Status</b></td>
        <td width="20%"><b>Feature Class</b></td>
        <td width="60%"><b>Description</b></td>
        </tr>
        <tr>
            <td><b>Current</b></td>
            <td>Existing_MP</td>
            <td>This status is for models of existing structures that are based on measurements.</td>
        </tr>

    <tr>
        <td><b>Approved Demo</b></td>
        <td>Existing_MP</td>
        <td>A structure that overlaps with a model that has status Approved.  The Approved Demo status is used to hide a model when portraying Approved projects.  The building still exists according to the latest observation. This observation can be recoreded using the Disappear Source attribute.   
        </td>
    </tr>
    
    <tr>
    <td><b>History</b></td>
    <td>History_MP</td>
    <td>A measured model that has been replaced by a newer model in the Existing_MP feature class or by models in Approved_MP that have been promoted to Under Construction or Complete.
    <p>History status may be applied to models of clumps of structures where a new model is replacing part of the historical model.  In these cases, the entire old model is historical.  Such a model may be flagged for splitting (QA_Flag = 3dEdit) to be divided to create a pocket for the new model.  The original model (the entire clump of structures) has status History.  The remaining part(s) of the model will be kept in the existing collection with status Current.   </td>
    </tr>

        <tr>
            <td><b>Board Approved</b></td>
            <td>Approved_MP</td>
            <td>The building project has been approved by the planning board. </td>
        </tr>
        <tr>
            <td><b>Complete</b></td>
            <td>Approved_MP</td>
            <td>Hand-made models of proposals. The shell of the building including external finishes appear to be complete.  These models remain in the Existing feature class until they are replaced with measured models. This status is used only for hand-made models of proposed projects/
             </td>
           </tr>
           <tr>
           <td><b>Under Construction</b></td>
           <td>Approved_MP</td>
           <td>The foundation (or more) of the new building is visible. </td>
        </tr>


        <tr>
            <td><b>Pre-File</b></td>
            <td>Internal_MP</td>
            <td>The model is a draft that has not yet been formally submitted for review. </td>
        </tr>
        <tr>
            <td><b>Internal Study</b></td>
              <td>Internal_MP</td>
              <td>The model represents a completely fictitious scenario not an official proposal </td>
            </tr>
        <tr>
        <td><b>Under Review</b></td>
        <td>Internal_MP</td>
        <td>The model represents a proposal that is under review by the planning board.  </td>
        </tr>

    <tr>
      <td><b>Proposal Superseded </b></td>
      <td>Internal</td>
      <td>The model represents a proposal that has been superseded by a new proposal.  </td>
    </tr>
    <tr>
    <td><b>Proposal Built </b></td>
      <td>Internal_MP</td>
      <td>The model represents a proposal that has been built.  The model has been replaced by a measured model.  </td>
    </tr>
    <tr>
        <td><b>Retired</b></td>
        <td>Retired_MP</td>
        <td>See the description of <b><a href="./#retired_mp:">Retired_MP</a></b> above. </td>
    </tr>
    <tr>
    <td><b>Alt Model</b></td>
    <td>Alt_MP</td>
    <td>The Alt feature class holds models that represent alternative representations of buildings.  For example, these could be models that are higher level of detail than current models -- such as models featuring textures.  These models will be shared in the As-Built model store.
     </td>
    </tr>
    <tr>
    <td><b>Expunge</b></td>
    <td>N/A</td>
    <td>If a model is an exact duplicate of another model that is in the Existing collection or the new models pipeline, or if the model is corrupt and being replaced by a repaired model then setting its Status to Expunged will cause it to be disregarded in the process of building the next edition of the collection.  This is the way to "delete" a model while retaining the ability for someone to go back and understand what it was and why it was deleted.   
    </td>
    </tr>
    
        </table>
    
        <br>
        <hr>
        <br>
        <h2 id="qa_flags">QA Flags Domain</h2>
        <p>QA Flags are used to provisionally mark models for attention.  For example when assimilating a batch of new models, it can be useful to use a spatial join to look for collisions with Existing or Proposed models in the stage collection.  Or a table join with the development log may indicate a model that is likely to be a candidate for promotion from status <b>Under Review</b> to <b>Approved</b>.  Models that are spatially associated with these may be candidates for status demotion, e.g. from <b>Current</b> to <b>Approved Demolition</b>.   The QA flags and QA Issue fields provide a means of recording the inferences returned by automated methods so that the conditions can be investigated to confirm the correct status values and to identify other issues that may need to be cleared up.  The QA Flag Wireframe view provides a way to quickly identify candidates and set the status attributes.  Setting the QA Flag to <b>Unflagged</b> causes the candidate models to disappear from the Flagged Wireframe view.  
         
            <table class="dictionary">
                <tr>
                  <th>Code</th>
                  <th>Description</th>
                </tr>
                <tr>
                    <td><b>Promotion Candidate</b></td>
                    <td>Model is a candidate for a status promotion. </td>
                </tr>
                <tr>
                    <td><b>Demotion Candidate</b></td>
                    <td>Model is a candidate for a status demotion. </td>
                </tr>
                <tr>
                    <td><b>History Candidate</b></td>
                    <td>Models that are considered for replacement by newer models that represent a changed shape are candidates for a status change to <b>History</b></td>
                </tr>
                <tr>
                    <td><b>Retirement Candidate</b></td>
                    <td>Models that are considerd fo replacement by newer models that have been observed more recently or may be a higher level of detail, but do not reflect a change in shape of the actual structure, are candidates for a change to status: <b>Retired.</b></td>
                </tr>
                <tr>
                    <td><b>3D Edit</b></td>
                    <td>For models identified as needing to be split or repaired</td>
                </tr>
                <tr>
                    <td><b>Flip Faces</b></td>
                    <td>Models with some or all faces that are turned the wrong way can be repaired later.</td>
                </tr>
                <tr>
                    <td><b>Remove Color</b></td>
                    <td>Models that have erroneous colors.</td>
                </tr>
                <tr>
                    <td><b>Expunge Candidate</b></td>
                    <td>Models that are corrupt or damaged which wil be replaced by repaired models from the same batch of observations are candidates for the status <b>Expunge</b></td>
                </tr>
                <tr>
                    <td><b>Other</b></td>
                    <td>Models with some other potential issue.</td>
                </tr>
                <tr>
                    <td><b>Unflagged</b></td>
                    <td>This value is useful for clearing the flag value once status has been updated or whatever issue has been resolved. </td>
                </tr>
            </table>

<br>
<hr>
<br>

        <h2 id="models">Guidelines for 3D Model Structure and Level of Detail</h2> 
        <p>
            The architecture of this schema, where we use one Multipatch or .Obj file to represent a building, bridge or wall is well suited to handling mesh objects that represent only the exterior shell of the structure.  It is preferable that the mesh be a closed “solid” that has all of its faces oriented toward to outside.  Within this guideline, there are many possibilities for levels of detail – as listed in the table below.  
        </p>
        <ul>
        <li>    Models that are not closed or include two-dimensional planes with single faces are problematic as Multipatches and can behave unpredictably with regard to shading, importing, and exporting.
        <li>    We are unable to publish models that incorporate textures or materials at this time. We may be able to represent these as multipatches, but the textures or materials will have to come off when the models are exported to SketchUp or OBJ.  This is an issue that we hope to address in coming revisions. 
        <li>    Level of detail 3 is preferred.  If models of building shells may be divided when building parts have distinct functions, like parking structures.  Or when parts have different construction dates.
        <li>   Models of LOD 4 or greater require a lot of work to assimilate and may be impossible to clean up to the point of working with our system. 
        </ul>    
        
        
        <h2 id="LOD">3D Model Levels of Detail </h2>
        <p>These levels of detail are compatible with the CityGML LOD scheme but are sub-divided according to the types of rough massing models that we commonly see shared by architects and hobbyists who share models onsites like 3D Warehouse.
        </p>
        <table class="dictionary">
            <tr>
              <th>Code</th>
              <th>Description</th>
             </tr>
              <tr>
              <td>LOD 0</td>
              <td>Polygon Footprint</td>
             </tr>
             <tr>
                <td>LOD 1</td>
                <td>Extruded Polygon Footprint</td>
               </tr>
               <tr>
                <td><p>LOD 1.5</p></td>
                <td>Massing model made from extruded roof prints when a structure with parts that have different heights</td>
               </tr>
               <tr>
                <td><p>LOD 2</p></td>
                <td><p>3D roof detail, extruded to the ground along drip-line.</p></td>
               </tr>
               <tr>
                <td>LOD 3</p></td>
                <td>Model portrays undercuts where appropriate. E.g. entryways, porticos or arcades.</td>
               </tr>
               <tr>
                <td>LOD 3.25</td>
                <td>Architectural details indicated by materials or image textures.</td>
               </tr>
               <tr>
                <td>LOD 3.5</td>
                <td>3.5	Building model expresses location of windows and entryways as 3D indentations</td>
               </tr>
               <td>LOD 4</td>
               <td>Model is divided horizontally as individual stories</td>
            </tr>
            <td>LOD 4.5</td>
            <td>Model divides interior spaces: rooms or zones.</td>
            </tr>
            </table>
 
 
 
        </div> <!-- Closes #article div -->
  <div id="footer"> <!-- Content provided by cityschema_includes.js--> </div> 




</div> <!-- Closes main container--> 
</div> <!-- closes grid container-->
</body>

</html>
    